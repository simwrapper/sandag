import{d as I,n as P,r as k,g as y,R as T,j as A,M as V,C as G,V as z,h as C}from"./index-DXwMd8J6.js";import{G as j}from"./lil-gui.esm-D2cLj-mk.js";import{d as H}from"./index-1GW52lzC.js";import{Y as E}from"./index-6F3aLhar.js";import{c as M}from"./index-BaMiGLGj.js";import{h as R,g as U}from"./ColorsAndWidths-BxdJmMWj.js";import{u as W}from"./util-DDCxpZ5I.js";import{H as B}from"./HTTPFileSystem-mhJZeBxO.js";import{C as w}from"./Coords-D-UV8-Xi.js";import{D as Y}from"./DashboardDataManager-BPyHyjlN.js";import{C as X}from"./CollapsiblePanel-Xr3kzqwk.js";import{D as q}from"./DrawingTool-ryYUP9o2.js";import{Z}from"./ZoomButtons-DjT_93U7.js";import{G as J,u as K,U as Q,_ as L,D as tt,S as et}from"./set-rtl-text-plugin-Cr2Q1psc.js";import{C as it}from"./column-layer-DmjF_CD_.js";import{a as st}from"./avro-Dd9UqmeZ.js";import"./color-DZRtpOAM.js";import"./cubehelix-Bg3rkAQA.js";import"./rainbow-Dz4seJAz.js";import"./threshold-DxQAdYxA.js";import"./index-_doEQLKC.js";import"./fxp-4YEvQr-_.js";import"./extends-CCbyfPlC.js";import"./RoadNetworkLoader.worker-Dk5IXYzf.js";import"./group-DobYzF2-.js";import"./geojson-layer-BIUM1AhK.js";import"./text-layer-BIdA0DCN.js";import"./path-layer-CD8MEmh-.js";import"./cut-by-mercator-bounds-4NGqEMJI.js";import"./solid-polygon-layer-GmKLAUU6.js";const at=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),ot=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),lt=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),nt=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),rt={POSITION:{size:3,value:new Float32Array(ot)},NORMAL:{size:3,value:new Float32Array(lt)},TEXCOORD_0:{size:2,value:new Float32Array(nt)}};class ht extends J{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const{id:i=K("cube-geometry")}=t;super({...t,id:i,indices:{size:1,value:new Uint16Array(at)},attributes:{...rt,...t.attributes}})}}const mt={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}};class x extends it{getGeometry(t){return new ht}draw({uniforms:t}){const{elevationScale:i,extruded:o,offset:a,coverage:c,cellSize:n,angle:s,radiusUnits:h}=this.props;this.state.model.setUniforms(t).setUniforms({radius:n/2,radiusUnits:Q[h],angle:s,offset:a,extruded:o,coverage:c,elevationScale:i,edgeDistance:1,isWireframe:!1}).draw()}}L(x,"layerName","GridCellLayer");L(x,"defaultProps",mt);const S=6,ct=I({name:"TimeSliderV2",props:{range:{type:Array,required:!0},allTimes:[]},data:()=>({state:{componentWidth:0,dragStartX:0,dragType:0,isDragging:!1,isSetupComplete:!1,leftPosition:0,rightPosition:1,datasetRange:[0,86400],labels:["",""],animationElapsedTime:0,startTime:0,timeFilter:[0,3599],animator:null,timeLabels:[0,1],currentTime:0},id:"id-"+Math.floor(1e12*Math.random()),resizer:null,ANIMATE_SPEED:5,isAnimating:!1}),computed:{fullDatasetTimeSpan(){return this.state.datasetRange[1]-this.state.datasetRange[0]+this.allTimes[0]},extentLeftToRight(){return this.state.rightPosition-this.state.leftPosition},hasNonZeroTimeRange(){return!!this.fullDatasetTimeSpan},calculateActiveMargins(){const e=this.state.componentWidth-2*S,t=Math.floor(e*this.state.leftPosition),i=Math.floor(e*(1-this.state.rightPosition));return{marginLeft:`${t}px`,marginRight:`${i}px`}}},mounted(){this.allTimes.unshift(0),this.range[0]=0,this.getDimensions(),this.setupInitialValues(),this.setupResizer(),window.addEventListener("mouseup",this.dragEnd),window.addEventListener("mousemove",this.dragging)},beforeDestroy(){this.resizer?.disconnect(),window.removeEventListener("mouseup",this.dragEnd),window.removeEventListener("mousemove",this.dragging),this.state.animator&&window.cancelAnimationFrame(this.state.animator)},watch:{"state.currentTime"(){this.updateExtent()},labels(){this.updateLabels()},"state.leftPosition"(){this.emitValues()},"state.rightPosition"(){this.emitValues()}},methods:{updateAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.state.animationElapsedTime=this.state.timeFilter[0]-this.range[0],this.state.startTime=Date.now()-this.state.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},findIndexLessThanOrEqualTo(e){let t=0,i=this.allTimes.length-1,o=0;for(;t<=i;){const a=Math.floor((t+i)/2);if(this.allTimes[a]===e)return a;this.allTimes[a]<=e?(o=a,t=a+1):i=a-1}return o},animate(){if(!this.isAnimating)return;this.state.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.state.startTime);const e=this.state.animationElapsedTime+this.range[0];this.state.currentTime=this.findIndexLessThanOrEqualTo(e),e>this.range[1]+this.allTimes[0]&&(this.state.startTime=Date.now(),this.state.animationElapsedTime=0),this.state.timeFilter=[this.allTimes[this.state.currentTime],this.allTimes[this.state.currentTime+1]==null?0:this.allTimes[this.state.currentTime+1]],this.state.animator=window.requestAnimationFrame(this.animate)},setupResizer(){try{this.resizer=new ResizeObserver(this.getDimensions);const e=document.getElementById(`id-${this.id}`);this.resizer.observe(e)}catch(e){console.error(""+e)}},setupInitialValues(){try{this.range&&(this.state.datasetRange=this.range,this.state.timeFilter=[this.allTimes[0],this.allTimes[1]]),this.fullDatasetTimeSpan===0?(this.state.leftPosition=0,this.state.rightPosition=1):this.updateExtent()}catch(e){console.error(""+e)}finally{this.state.isSetupComplete=!0}},updateExtent(){this.state.timeFilter&&(this.state.leftPosition=1/this.fullDatasetTimeSpan*(this.allTimes[this.state.currentTime]-this.allTimes[0]),this.state.rightPosition=1/this.fullDatasetTimeSpan*(this.allTimes[this.state.currentTime+1]==null?this.allTimes[this.state.currentTime]+this.allTimes[0]:this.allTimes[this.state.currentTime+1]-this.allTimes[0]),this.state.timeLabels=[this.convertSecondsToClockTimeMinutes(this.allTimes[this.state.currentTime]),this.convertSecondsToClockTimeMinutes(this.allTimes[this.state.currentTime+1]==null?this.allTimes[this.state.currentTime]+this.allTimes[0]:this.allTimes[this.state.currentTime+1])],this.updateLabels())},updateLabels(){this.state.timeLabels&&(this.state.labels=this.state.timeLabels)},emitValues(){this.state.isSetupComplete&&this.$emit("timeExtent",this.state.timeFilter)},convertSecondsToClockTimeMinutes(e){const t=Math.floor(e/3600),i=Math.floor((e-t*3600)/60),o=e-t*3600-i*60,a={h:`${t}`,m:`${i}`.padStart(2,"0"),s:`${o}`.padStart(2,"0")};return`${a.h}:${a.m}`},getDimensions(){this.state.componentWidth=this.$refs.slider?.clientWidth||0},dragStart(e){this.state.isDragging=!0,this.state.dragStartX=e.clientX;const t=this.state.componentWidth-2*S,i=Math.floor(t*this.state.leftPosition),o=Math.floor(t*(1-this.state.rightPosition)),a=this.state.componentWidth-o-i-2*S;e.offsetX>=0&&e.offsetX<a?this.state.dragType=0:e.offsetX<0?this.state.dragType=1:e.offsetX>a&&(this.state.dragType=2)},dragging(e){if(!this.state.isDragging)return;const t=e.clientX-this.state.dragStartX,i=this.state.componentWidth-2*S;if(this.state.dragType==0){const o=this.extentLeftToRight;let a=(i*this.state.leftPosition+t)/i,c=a+o;a<0&&(a=0,c=o),c>1&&(c=1,a=c-o),this.state.leftPosition=a,this.state.rightPosition=c,this.updateLabels(),this.updateData(),this.state.dragStartX=e.clientX;return}},dragEnd(e){const t=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0]);this.state.leftPosition=1/this.fullDatasetTimeSpan*(this.allTimes[t]-this.allTimes[0]),this.state.rightPosition=1/this.fullDatasetTimeSpan*(this.allTimes[t+1]==null?this.allTimes[t]+this.allTimes[0]:this.allTimes[t+1]-this.allTimes[0]),this.state.timeFilter=[this.allTimes[t]-this.allTimes[0],this.allTimes[t+1]==null?this.allTimes[t]+this.allTimes[0]:this.allTimes[t+1]-this.allTimes[0]],this.state.isDragging=!1},updateData(){const e=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0]),t=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0])+1;this.state.timeLabels=[this.convertSecondsToClockTimeMinutes(this.allTimes[e]),this.convertSecondsToClockTimeMinutes(this.allTimes[t])],this.state.timeFilter=[this.allTimes[e],this.allTimes[t]]}}});var ut=function(){var t=this,i=t._self._c;return t._self._setupProxy,t.hasNonZeroTimeRange?i("div",{staticClass:"time-slider-component",attrs:{id:`id-${t.id}`}},[i("div",{staticClass:"label-area"},[i("p",{staticClass:"p1"},[t._v(t._s(t.state.labels[0]))]),i("p",{directives:[{name:"show",rawName:"v-show",value:t.state.labels[1]!==void 0,expression:"state.labels[1] !== undefined"}],staticClass:"p2"},[t._v(" - "+t._s(t.state.labels[1]))])]),i("div",{staticClass:"slider-area"},[i("button",{staticClass:"button play-button",attrs:{size:"is-small",type:"is-link"},on:{click:t.updateAnimation}},[t._v(t._s(t.isAnimating?"| |":">"))]),i("div",{ref:"slider",staticClass:"time-slider-dragger",on:{mousemove:t.dragging}},[i("div",{staticClass:"active-region",style:t.calculateActiveMargins,on:{mousedown:t.dragStart,mouseup:function(o){return o.stopPropagation(),t.dragEnd.apply(null,arguments)},mousemove:function(o){return o.stopPropagation(),t.dragging.apply(null,arguments)}}})])])]):t._e()},dt=[],gt=P(ct,ut,dt,!1,null,"c898e554");const pt=gt.exports;function ft({viewId:e=0,colorRamp:t="Viridis",dark:i=!1,data:o={},currentTimeIndex:a=0,mapIsIndependent:c=!1,maxHeight:n=200,cellSize:s=200,opacity:h=.7,upperPercentile:p=100}){const[v,u]=k.useState(y.state.viewState);T[e]=l=>{u(l||y.state.viewState)};function f(l){!l||typeof l.latitude!="number"||typeof l.longitude!="number"||(l.center||(l.center=[0,0]),l.center[0]=l.longitude,l.center[1]=l.latitude,u(l),c||y.commit("setMapCamera",l))}function d(l){if(!l?.coordinate)return null;const g=o.mapData[a]?.values;if(!g||!g[l.index])return null;const[b,D]=l.coordinate,F=g[l.index]/o.scaledFactor,_=Number(F.toFixed(6)),$=o.unit,O=Number.isFinite(D)?D.toFixed(4):"",N=Number.isFinite(b)?b.toFixed(4):"";return{html:`<b>${_} ${$}</b><br/>${O} / ${N}`,style:i?{color:"#ccc",backgroundColor:"#2a3c4f"}:{color:"#223",backgroundColor:"white"}}}const r=M({colormap:t,nshades:10,format:"rba",alpha:1}).map(l=>[l[0],l[1],l[2],255]),m=[new x({id:"gridlayer",data:{length:o.mapData[a].length,attributes:{getPosition:{value:o.mapData[a].centroid,size:2},getFillColor:{value:o.mapData[a].colorData,size:3},getElevation:{value:o.mapData[a].values,size:1}}},colorRange:i?r.slice(1):r.reverse().slice(1),coverage:1,autoHighlight:!0,elevationRange:[0,n],elevationScale:n,pickable:!0,opacity:h,cellSize:s,upperPercentile:p,material:!1,transitions:{elevationScale:{type:"interpolation",duration:50}},parameters:{}})];return A.createElement(tt,{layers:m,controller:!0,useDevicePixels:!1,viewState:v,getTooltip:d,onViewStateChange:l=>f(l.viewState)},A.createElement(et,{mapStyle:y.getters.mapStyle,preventStyleDiffing:!0,mapboxApiAccessToken:V}))}const vt={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count"},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D Höhe",showDetails:"Details anzeigen",selection:"Ausgewählt",areas:"Orte",count:"Anzahl"}}},Dt=I({name:"GridMapPlugin",i18n:vt,components:{CollapsiblePanel:X,DrawingTool:q,GridLayer:ft,ToggleButton:H.ToggleButton,ZoomButtons:Z,TimeSlider:pt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){const e=["Inferno","Magma","Viridis","Greens","Reds","RdYlGn","greenRed"];return{id:`id-${Math.floor(1e12*Math.random())}`,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",cellSize:250,opacity:.7,maxHeight:0,userColorRamp:"Viridis",center:null,zoom:9,mapIsIndependent:!1},colorRamps:e,columnLookup:[],gzipWorker:null,colorRamp:e[0],globalState:y.state,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",cellSize:250,opacity:.7,maxHeight:0,userColorRamp:"virdis",center:null,zoom:9,breakpoints:null,valueColumn:"value",unit:""},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},data:null,selectedTimeData:[],allTimePeriodes:[],colors:M({colormap:"Viridis",nshades:10,format:"rba",alpha:1}).map(t=>[t[0],t[1],t[2],255]),currentTime:[0,0],timeToIndex:new Map,guiConfig:{buckets:10,exponent:4,radius:150,opacity:1,height:100,"color ramp":"Viridis",colorRamps:e,flip:!1,steps:10},configId:`gui-config-${Math.floor(1e12*Math.random())}`,guiController:null,minRadius:50,maxRadius:300,radiusStep:5,isLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",timeRange:[1/0,-1/0],allTimes:[],myDataManager:this.datamanager||new Y(this.root,this.subfolder)}},computed:{fileApi(){return new B(this.fileSystem,y)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},urlThumbnail(){return this.thumbnailUrl},mapProps(){return{viewId:this.id,colorRamp:this.colorRamp,coverage:.65,dark:this.$store.state.isDarkMode,data:this.data,currentTimeIndex:this.timeToIndex.get(this.currentTime[0]),mapIsIndependent:this.vizDetails.mapIsIndependent,maxHeight:this.guiConfig.height,userColorRamp:this.guiConfig["color ramp"],cellSize:this.guiConfig.radius,opacity:this.guiConfig.opacity,upperPercentile:100}},textColor(){const e={text:"#3498db",bg:"#eeeef480"},t={text:"white",bg:"#181518aa"};return this.$store.state.colorScheme===G.DarkMode?t:e}},watch:{"$store.state.viewState"(){this.vizDetails.mapIsIndependent||T[this.id]&&T[this.id]()}},methods:{pickColor(e){if(e<0||e>100)return console.warn("Invalid value for pickColor: Value should be between 0 and 100."),[0,0,0,0];if(this.vizDetails.colorRamp.breakpoints&&this.vizDetails.colorRamp.breakpoints.length==this.vizDetails.colorRamp.fixedColors.length-1){for(let t=0;t<this.vizDetails.colorRamp.breakpoints.length-1;t++)if(e>this.vizDetails.colorRamp.breakpoints[t]&&e<=this.vizDetails.colorRamp.breakpoints[t+1])return R(this.vizDetails.colorRamp.fixedColors[t+1]);return e<this.vizDetails.colorRamp.breakpoints[0]?R(this.vizDetails.colorRamp.fixedColors[0]):e>=this.vizDetails.colorRamp.breakpoints[this.vizDetails.colorRamp.breakpoints.length-1]?R(this.vizDetails.colorRamp.fixedColors[this.vizDetails.colorRamp.fixedColors.length-1]):new Uint8Array([255,255,255,255])}else{const t=Math.floor(e/100*(this.colors.length-1));return this.colors[t]}},async solveProjection(){if(console.log("solveProjection"),!this.thumbnail){console.log("WHAT PROJECTION:");try{const e=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=E.parse(e)}catch(e){console.error(e)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({colorRamp:""},this.config),this.setRadiusAndHeight(),this.setCustomGuiConfig();return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.loadOutputTripsConfig()},loadOutputTripsConfig(){let e="";this.myState.thumbnail||(e=prompt('Enter projection: e.g. "EPSG:31468"')||"EPSG:31468",parseInt(e,10)&&(e="EPSG:"+e)),this.vizDetails={title:"Output Trips",description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:e,cellSize:this.vizDetails.cellSize,colorRamp:this.vizDetails.colorRamp,opacity:this.vizDetails.opacity,maxHeight:this.vizDetails.maxHeight,userColorRamp:this.vizDetails.userColorRamp,center:this.vizDetails.center,zoom:this.vizDetails.zoom,valueColumn:this.vizDetails.valueColumn,unit:this.vizDetails.unit},this.$emit("title",this.vizDetails.title),this.solveProjection()},setRadiusAndHeight(){this.vizDetails.cellSize||z.set(this.vizDetails,"cellSize",250),this.vizDetails.maxHeight||z.set(this.vizDetails,"maxHeight",0),this.vizDetails.opacity||z.set(this.vizDetails,"opacity",.7)},async loadStandaloneYAMLConfig(){try{const e=this.myState.yamlConfig.includes("/")?this.myState.yamlConfig:`${this.myState.subfolder}/${this.myState.yamlConfig}`,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=E.parse(t),this.validateYAML(),this.setVizDetails()}catch{const t=`File not found: ${this.myState.subfolder}/${this.myState.yamlConfig}`;this.$emit("error",t)}},validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t={};e?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config),t.cellSize==0&&this.$store.commit("setStatus",{type:C.WARNING,msg:"Radius is out of the recommended range",desc:"Radius can not be zero, preset value used instead. "}),(t.opacity<=0||t.opacity>1)&&this.$store.commit("setStatus",{type:C.WARNING,msg:"Opacity set to zero",desc:"Opacity levels should be between 0 and 1. "}),(t.zoom<5||t.zoom>20)&&this.$store.commit("setStatus",{type:C.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "}),t.maxHeight<0&&this.$store.commit("setStatus",{type:C.WARNING,msg:"maxHeight is out of the recommended range ",desc:"maxHeight should be greater than 0"})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig),this.setRadiusAndHeight();const e=this.vizDetails.title?this.vizDetails.title:"Grid Map";this.$emit("title",e)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),i=W.arrayBufferToBase64(t);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(e){console.error(e)}},setMapCenter(){if(this.vizDetails.center){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number));const e={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:10,pitch:0,zoom:this.vizDetails.zoom||10,jump:!0,center:[this.vizDetails.center[0],this.vizDetails.center[1]]};T[this.id]&&T[this.id](e),this.$store.commit("setMapCamera",e);return}},async loadAndPrepareData(){return this.vizDetails.file.indexOf(".avro")>-1?await this.loadAndPrepareAvroData():await this.loadAndPrepareCSVData()},async loadAndPrepareAvroData(){const e=`${this.subfolder}/${this.vizDetails.file}`,t=await this.fileApi.getFileBlob(e),i=await new Promise((r,m)=>{const l=[];st.createBlobDecoder(t).on("metadata",g=>{}).on("data",g=>{l.push(g)}).on("end",()=>{r(l)})});let o=Number.NEGATIVE_INFINITY;const a=i[0];this.allTimes=a.timestamps,this.allTimes=this.allTimes.sort((r,m)=>r-m),this.timeRange[0]=this.allTimes[0],this.timeRange[1]=this.allTimes[this.allTimes.length-1];const c=Object.keys(a.data)[0],n=a.data[c];for(const r of n)o=Math.max(o,r);const s=100/o;this.vizDetails.unit==null&&(this.vizDetails.unit="");const h={mapData:[],scaledFactor:s,unit:this.vizDetails.unit},p=a.xCoords,v=a.yCoords,u=p.length*v.length;a.crs&&(this.vizDetails.projection=a.crs),this.vizDetails.projection||this.$emit("error",'No coordinate projection. Add "projection: EPSG:xxxx" to config');const f=new Float32Array(u*2);let d=0;for(let r=0;r<p.length;r++)for(let m=0;m<v.length;m++){let l=[p[r],v[m]];l=w.toLngLat(this.vizDetails.projection,l),f[d]=l[0],f[d+1]=l[1],d+=2}this.allTimes.forEach((r,m)=>{this.timeToIndex.set(r,m),h.mapData.push({length:u,time:r,centroid:f,values:new Float32Array(u),colorData:new Uint8Array(u*3)})});for(let r=0;r<this.allTimes.length;r++){console.log("time",r);for(let m=0;m<u;m++){const l=r*u+m,g=s*n[l],b=this.pickColor(g);h.mapData[r].values[m]=g;for(let D=0;D<3;D++)h.mapData[r].colorData[m*3+D]=b[D]}}return this.myState.statusMessage="",h},async loadAndPrepareCSVData(){const e={dataset:this.vizDetails.file};let t={};try{t=await this.myDataManager.getDataset(e,{subfolder:this.subfolder})}catch(s){this.$emit("error",""+s)}t.comments&&t.comments.length&&t.comments.forEach(s=>{if(s.indexOf("EPSG")>-1){const h=s.substring(s.lastIndexOf("EPSG")).trim();h&&(this.vizDetails.projection=h)}});let i=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY;this.vizDetails.valueColumn==null&&(this.vizDetails.valueColumn="value"),this.vizDetails.unit==null&&(this.vizDetails.unit="");for(let s=0;s<t.allRows[this.vizDetails.valueColumn].values.length;s++)this.allTimes.includes(t.allRows.time.values[s])||this.allTimes.push(t.allRows.time.values[s]),t.allRows[this.vizDetails.valueColumn].values[s]<i&&(i=t.allRows[this.vizDetails.valueColumn].values[s]),t.allRows[this.vizDetails.valueColumn].values[s]>o&&(o=t.allRows[this.vizDetails.valueColumn].values[s]),this.allTimes.includes(t.allRows.time.values[s])||this.allTimes.push(t.allRows.time.values[s]);this.allTimes=this.allTimes.sort((s,h)=>s-h),this.timeRange[0]=Math.min.apply(Math,this.allTimes),this.timeRange[1]=Math.max.apply(Math,this.allTimes);const a=Math.ceil(t.allRows[this.vizDetails.valueColumn].values.length/this.allTimes.length),c=100/o,n={mapData:[],scaledFactor:c,unit:this.vizDetails.unit};if(this.allTimes.forEach((s,h)=>{this.timeToIndex.set(s,h),n.mapData.push({time:s,values:new Float32Array(a),centroid:new Float32Array(a*2),colorData:new Uint8Array(a*3),numberOfFilledValues:0,numberOfFilledCentroids:0,numberOfFilledColors:0,length:a})}),!this.vizDetails.projection){const s='No coordinate projection. Add "projection: EPSG:xxxx" to config';throw this.$emit("error",s),Error(s)}for(let s=0;s<t.allRows[this.vizDetails.valueColumn].values.length;s++){const h=this.timeToIndex.get(t.allRows.time.values[s]),p=c*t.allRows[this.vizDetails.valueColumn].values[s],v=this.pickColor(p),u=n.mapData[h].numberOfFilledValues,f=n.mapData[h].numberOfFilledColors,d=n.mapData[h].numberOfFilledCentroids;n.mapData[h].values[u]=p;for(let m=0;m<3;m++)n.mapData[h].colorData[f+m]=v[m];let r=[t.allRows.x.values[s],t.allRows.y.values[s]];this.vizDetails.projection!=="EPSG:4326"&&(r=w.toLngLat(this.vizDetails.projection,[t.allRows.x.values[s],t.allRows.y.values[s]])),n.mapData[h].centroid[d]=r[0],n.mapData[h].centroid[d+1]=r[1],n.mapData[h].numberOfFilledValues=u+1,n.mapData[h].numberOfFilledCentroids=d+2,n.mapData[h].numberOfFilledColors=f+3}return Array.from(this.allTimes.keys()).forEach(s=>{delete n.mapData[s].numberOfFilledValues,delete n.mapData[s].numberOfFilledCentroids,delete n.mapData[s].numberOfFilledColors}),this.myState.statusMessage="",n},resolveProjection(){if(this.vizDetails.projection!=="EPSG:4326")for(let e=0;e<this.data.length;e++){const t=w.toLngLat(this.vizDetails.projection,this.data[e].centroid);this.data[e].centroid=t}},handleTimeSliderValues(e){this.currentTime=e,this.selectedTimeData=[];for(let t=0;t<this.data.length;t++)this.data[t].time==e[0]&&this.selectedTimeData.push(this.data[t])},setupGui(){this.guiController=new j({title:"Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const e=this.guiController;if(e.add(this.guiConfig,"radius",this.minRadius,this.maxRadius,this.radiusStep),e.add(this.guiConfig,"opacity",0,1,.1),e.add(this.guiConfig,"height",0,250,5),this.vizDetails.colorRamp){this.vizDetails.colorRamp.breakpoints&&this.vizDetails.colorRamp.fixedColors&&this.vizDetails.colorRamp.breakpoints.length!==this.vizDetails.colorRamp.fixedColors.length-1&&this.$emit("error","Color ramp breakpoints and fixedColors do not have correct lengths");return}const t=e.addFolder("colors");t.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(this.setColors),t.add(this.guiConfig,"flip").onChange(this.setColors),this.setColors()},setColors(){if(!this.data)return;const e={ramp:this.guiConfig["color ramp"]};console.log("Ramp: ",this.guiConfig["color ramp"]),console.log("n: ",this.guiConfig.steps);const t=U(e,this.guiConfig.steps);if(t.length==0){const i=`Invalid color ramp: ${this.guiConfig["color ramp"]}`;this.$emit("error",i)}t.length&&(this.colors=[]),this.colors=this.hexArrayToRgbArray(t),this.guiConfig.flip&&(this.colors=this.colors.reverse());for(let i=0;i<this.data.mapData.length;i++)for(let o=0;o<this.data.mapData[i].values.length;o++){const a=this.data.mapData[i].values[o],c=this.pickColor(a);if(c==null)break;for(let n=o*3;n<=o*3+2;n++)this.data.mapData[i].colorData[n]=c[n%3]}this.currentTime=[...this.currentTime]},hexArrayToRgbArray(e){const t=[];for(let i=0;i<e.length;i++){const o=e[i].replace(/^#/,""),a=parseInt(o.substring(0,2),16),c=parseInt(o.substring(2,4),16),n=parseInt(o.substring(4,6),16);t.push([a,c,n,255])}return t},setCustomGuiConfig(){this.config&&(this.config.colorRamp&&(this.config.colorRamp.ramp!=null&&(this.guiConfig["color ramp"]=this.config.colorRamp.ramp),this.config.colorRamp.reverse!=null&&(this.guiConfig.flip=this.config.colorRamp.reverse),this.config.colorRamp.steps!=null&&(this.guiConfig.steps=this.config.colorRamp.steps)),this.config.cellSize>=this.minRadius&&this.config.cellSize<=this.maxRadius&&(this.guiConfig.radius=this.config.cellSize),this.config.maxHeight&&(this.guiConfig.height=this.config.maxHeight),this.config.opacity&&(this.guiConfig.opacity=this.config.opacity))}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),!this.thumbnail&&(this.setupGui(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.data=await this.loadAndPrepareData(),this.setColors(),this.isLoaded=!0,this.setMapCenter())},beforeDestroy(){T[this.id]=void 0,delete T[this.id],this.data=null,this.$store.commit("setFullScreen",!1)}});var Tt=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"xy-hexagons",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false",id:`id-${t.id}`}},[!t.thumbnail&&t.isLoaded?i("grid-layer",t._b({},"grid-layer",t.mapProps,!1)):t._e(),!t.thumbnail&&t.isLoaded?i("zoom-buttons",{attrs:{corner:"bottom"}}):t._e(),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),t.isLoaded?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,allTimes:t.allTimes},on:{timeExtent:t.handleTimeSliderValues}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e()],1)},yt=[],bt=P(Dt,Tt,yt,!1,null,"e3a7002b");const ee=bt.exports;export{ee as default};
